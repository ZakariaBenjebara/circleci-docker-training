# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

version: 2

defaults: &defaults
  working_directory: ~/zgeeks/circleci-training
  docker:
    - image: circleci/openjdk:8-jdk
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

  environment:
    JVM_OPTS: -Xmx3200m
    MAVEN_OPTS: -Xmx3200m
    TERM: dumb

version: 2
jobs:
  prepare:
    <<: *defaults

    steps:
      - checkout
      - restore_cache:
          keys:
          - maven-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - maven-dependencies-
      - run: mvn dependency:go-offline 
      - save_cache:
          paths:
            - ~/.m2
          key: maven-dependencies-{{ checksum "pom.xml" }}

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - maven-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - maven-dependencies-
      - run: mvn test
      - store_test_results:
           path: target/surefire-reports
  
  package:
    <<: *defaults
    steps:
     - checkout
     - restore_cache:
          keys:
          - maven-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - maven-dependencies-
     - run: mvn package -DskipTests
     - store_artifacts:
          path: target/zgeeks-circleci-training-0.0.1-SNAPSHOT.jar

  deploy:
    working_directory: ~/zgeeks/circleci-training
    docker:
     - image: docker:17.05.0-ce-git    
    steps:
     - checkout
     # build and push Docker image
     - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)

      # use a primary image that already has Docker (recommended)
      # or install it during a build like we do here
     - run:
         name: Install Docker client
         command: |
           set -x
           VER="17.12.1-ce"
           curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
           tar -xz -C /tmp -f /tmp/docker-$VER.tgz
           mv /tmp/docker/* /usr/bin

     - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t zbenjeb23/zgeeks-circle-ci:$TAG .      # (4)
          docker login -u $DOCKER_USER -p $DOCKER_PASS         # (5)
          docker push zbenjeb23/zgeeks-circle-ci:$TAG
    
  
workflows:
  version: 2
  prepare_test_package:
    jobs:
      - prepare
      - test:
          requires:
            - prepare
      - package:
          requires:
            - test
      - deploy:
          requires:
            - package