# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

version: 2

defaults: &defaults
  working_directory: ~/zgeeks/circleci-training
  docker:
    - image: circleci/openjdk:8-jdk
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

  environment:
    JVM_OPTS: -Xmx3200m
    MAVEN_OPTS: -Xmx3200m
    TERM: dumb

version: 2
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - maven-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - maven-dependencies-
      - run: mvn dependency:go-offline 
      - save_cache:
          paths:
            - ~/.m2
          key: maven-dependencies-{{ checksum "pom.xml" }}

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - maven-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - maven-dependencies-
      - run: mvn test
      - store_test_results:
           path: target/surefire-reports
  
  build:
    <<: *defaults
    steps:
     - checkout
     - restore_cache:
          keys:
          - maven-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - maven-dependencies-
     - run: mvn package -DskipTests
     - store_artifacts:
          path: target/zgeeks-circleci-training-0.0.1-SNAPSHOT.jar
     - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
     - run: 
         name: Create docker container and deploy it to docker hub
         command: |
           TAG=0.1.$CIRCLE_BUILD_NUM
           chmod +x ./utils/deploy.sh
           ./utils/deploy.sh $DOCKER_REGISTRY $DOCKER_IMAGE_NAME $DOCKER_USER $DOCKER_PASS $TAG
  
workflows:
  version: 2
  prepare_test_package:
    jobs:
      - prepare
      - test:
          requires:
            - prepare
      - build:
          requires:
            - test
          filters:
            branches:
              only: master